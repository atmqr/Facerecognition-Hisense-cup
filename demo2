#完整代码
##############################################################################################################################################
import cv2
import  os
import face_recognition
from PIL import Image, ImageDraw
from PyFaceDet import facedetectcnn
from threading import Timer


#设置摄像头参数

cap = cv2.VideoCapture(1)
cap.set(cv2.CAP_PROP_FPS,100)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
cap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter.fourcc('M', 'J', 'P', 'G'))
#全局自动调阈值
tole=[0.5,0.48,0.45,0.43,0.42,0.4,0.38,0.35]
tj=0




def save_face(imgaa):
    # Load the jpg file into a numpy array
    image = face_recognition.load_image_file(imgaa,'RGB')
    face_locations = face_recognition.face_locations(image)
    flag_image=1
    for face_location in face_locations:
        # 打印每张脸的位置
        top, right, bottom, left = face_location
        #print("人脸位于像素位置顶部: {}, Left: {}, Bottom: {}, Right: {}".format(top, left, bottom, right))
        # You can access the actual face itself like this:
        face_image = image[top:bottom, left:right]
        pil_image = Image.fromarray(face_image)
        mp.imsave("save\\"+str(flag_image)+".jpg",face_image)
        flag_image = flag_image + 1

def rgb_to_hex(imgaa):
    img = Image.open(imgaa)
    search_image = img.getcolors(img.size[0]*img.size[1])
    max_num=search_image[0]
    for i in search_image:
        if(i[0]>max_num[0]):
            max_num=i
    strs=''
    for i in max_num[1]:
        num = int(i)#将str转int
        #将R、G、B分别转化为16进制拼接转换并大写
        strs += str(hex(num))[-2:].replace('x','0').upper()
    return strs

def skin_sorts(im_ip):
    save_face(im_ip)
    arr={}
    for i in range(1,7):
        imgaa='save/'+ str(i) + '.jpg'
        arr[i]=rgb_to_hex(imgaa)
    
    list1= sorted(arr.items(),key=lambda x:x[1])
    print(list1)












#目标人脸判断
def image_judge(known_image, unknown_image, flag):
    # 获取目标人面部编码
    global tole
    global tj
    known_image = face_recognition.load_image_file(known_image)
    unknown_image = face_recognition.load_image_file(unknown_image)
    
    # 返回一个待测人群的面部编码
    obama_encoding = face_recognition.face_encodings(known_image)[0]
    unknown_encoding1 = face_recognition.face_encodings(unknown_image)
    # print(unknown_encoding1)
    #
    #for i in range(len(unknown_encoding1)):
        #返回的是一个True或者一个False的列表
    if face_recognition.compare_faces([obama_encoding], unknown_encoding1[flag], tolerance=tole[tj])[0]:  # 判断  tolerance值越小越精确
        return True
    else:
        return False

    
#分别表示目标人脸和未知人脸参数    
def image_handle(known_image,image_ip):
    global tole
    global tj
    image=face_recognition.load_image_file(image_ip)
    face_locations=face_recognition.face_locations(image)
    faceNum = len(face_locations)
    print("人脸个数是:",faceNum)
    # 读取原图，准备做标志
    pil_image = Image.fromarray(image)
    arr=[]
    mubiao=0
    for i in range(0, faceNum):
        # 面部区域的四个坐标
        top = face_locations[i][0]
        right = face_locations[i][1]
        bottom = face_locations[i][2]
        left = face_locations[i][3]
        # 画图
        if image_judge(known_image,image_ip,i):
            d = ImageDraw.Draw(pil_image, 'RGBA')
            d.rectangle((left, top, right, bottom), outline="#A00DAB")#目标人物用紫色圈出来
            
            arr.append(i)
            mubiao=mubiao+1
        else:
            d = ImageDraw.Draw(pil_image, 'RGBA')
            d.rectangle((left, top, right, bottom), outline="#0DABA0")#非目标人物则用蓝色圈出来
        cv2.putText(d,str(i),(top,right),font,2,(0,250,0))
    while True:
        print(mubiao,tole[tj])
        if len(arr)>1:
            tj=tj+1
            for i in arr:
            # 面部区域的四个坐标
                top = face_locations[i][0]
                right = face_locations[i][1]
                bottom = face_locations[i][2]
                left = face_locations[i][3]
                # 画图
                if image_judge(known_image,image_ip,i):
                    d = ImageDraw.Draw(pil_image, 'RGBA')
                    d.rectangle((left, top, right, bottom), outline="#A00DAB")#目标人物用紫色圈出来
                else:
                    d = ImageDraw.Draw(pil_image, 'RGBA')
                    d.rectangle((left, top, right, bottom), outline="#0DABA0")#非目标人物则用蓝色圈出来
                    arr.remove(i)
                    mubiao=mubiao-1
        elif len(arr)<1:
            tj=tj-1
            for i in range(0, faceNum):
            # 面部区域的四个坐标
                top = face_locations[i][0]
                right = face_locations[i][1]
                bottom = face_locations[i][2]
                left = face_locations[i][3]
                # 画图
                if image_judge(known_image,image_ip,i):
                    d = ImageDraw.Draw(pil_image, 'RGBA')
                    d.rectangle((left, top, right, bottom), outline="#A00DAB")#目标人物用紫色圈出来
                    arr.append(i)
                    mubiao=mubiao+1
                else:
                    d = ImageDraw.Draw(pil_image, 'RGBA')
                    d.rectangle((left, top, right, bottom), outline="#0DABA0")#非目标人物则用蓝色圈出来
        else:
            break
            
    # 显示标志后的图片
    pil_image.show()

#处理图片PyFaceDet（对图像进行采集，当识别到全部人脸以后就进行拍照）
def PyFace_image(image_path,close_win):
    img=cv2.imread(image_path)
    Faces=facedetectcnn.facedetect_cnn(image_path)
    #print(len(Faces))  #计算元组的长度
    for i in range(len(Faces)):
        x = Faces[i][0]
        y = Faces[i][1]
        L = Faces[i][2] 
        W = Faces[i][3]
        confidence = Faces[i][4]
        angle = Faces[i][5]
        font = cv2.FONT_HERSHEY_SIMPLEX
        cv2.rectangle(img, (x, y), (x + L, y + W), (34, 139, 34), 2)  # 图片，左上角坐标，右下角坐标，画线对应RGB
        roi_color = img[y:y + W, x:x + L]
        cv2.putText(img, str(confidence), (x + 5, y - 5), font, 1, (0, 0, 255), 1)  # 图片，添加的文字，左上角坐标，字体，字体大小，颜色，字体粗细
        cv2.imshow('camera', img)
        if i==1:  # 人脸个数控制
            return True
        k = cv2.waitKey(close_win)  # 等待close_win毫秒后关闭显示的窗口
        
#存图片
def write_image(start_id,times):
    while(1):
        ret,frame = cap.read()
        cv2.imshow('capture',frame)
        if(start_id % times == 0):
            #每隔times帧处理一张
            cv2.imwrite("faceok_image\\"+ str(1) + ".jpg",frame)
            #如果找到六个人就保存
            if PyFace_image('faceok_image\\1.jpg',100):
                print("我找到全部人脸了，我要开始保存了！！！")
                #保存已经找到的六张人脸
                cv2.imwrite("test1\\"+ "thnu_jqr_" + ".jpg",frame)
                
                #对图像进行切割
                #save_face('test1/thnu_jqr_.jpg')
                #肤色检测
                #skin_sorts('test1/thnu_jqr_.jpg')
                #开始执行函数进行图像处理
                #image_handle('test/apy.png','test1/thnu_jqr_.jpg')
                print("图像存起来了！！！")
            #cv2.imwrite("test1\\"+ str(start_id) + ".jpg",frame)
        start_id = start_id + 1
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

cv2.destroyAllWindows()
if __name__ == "__main__":
    write_image(1,120)
    skin_sorts('test1/thnu_jqr_.jpg')
    image_handle('test/apy.png','test1/thnu_jqr_.jpg')
